name: Compilation & tests

on: [workflow_dispatch, push, pull_request]

jobs:
  nano_build_debug:
    name: Build debug app for NanoS, X and S+
    strategy:
      matrix:
        include:
          - SDK: "$NANOS_SDK"
            name: nanos
          - SDK: "$NANOX_SDK"
            name: nanox
          - SDK: "$NANOSP_SDK"
            name: nanosp
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/ledgerhq/ledger-app-builder/ledger-app-builder:latest
    steps:
      - name: Clone
        uses: actions/checkout@v2
      - name: Build
        run: |
          make DEBUG=1 BOLOS_SDK=${{ matrix.SDK }}
          mv bin/app.elf bin/constellation_${{ matrix.name }}.elf
      - name: Upload app binary
        uses: actions/upload-artifact@v2
        with:
          name: apps
          path: bin/*.elf

  job_scan_build:
    name: Clang Static Analyzer
    runs-on: ubuntu-latest

    container:
      image: ghcr.io/ledgerhq/ledger-app-builder/ledger-app-builder:latest

    steps:
      - uses: actions/checkout@v2

      - name: Build with Clang Static Analyzer
        run: |
          make clean
          scan-build --use-cc=clang -analyze-headers -enable-checker security -enable-checker unix -enable-checker valist -o scan-build --status-bugs make default
      - uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: scan-build
          path: scan-build
# =====================================================
#            ZEMU TESTS
# =====================================================

  building_for_e2e_zemu_tests:
    name: Building binaries for E2E Zemu tests
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/ledgerhq/ledger-app-builder/ledger-app-builder-lite:latest

    steps:
      - uses: actions/checkout@v2

      - name: Build testing binaries
        run: |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          cd tests/functional/ &&  bash build_test_elfs.sh
      - name: Upload app binaries
        uses: actions/upload-artifact@v2
        with:
          name: e2e_zemu_elfs
          path: ./tests/functional/elfs/
